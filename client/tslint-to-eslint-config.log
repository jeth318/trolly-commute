7 ESLint rules behave differently from their TSLint counterparts:
  * @typescript-eslint/no-unused-expressions:
    - The TSLint optional config "allow-new" is the default ESLint behavior and will no longer be ignored.
  * @typescript-eslint/quotes:
    - Option "jsx-double" is not supported by ESLint.
  * brace-style:
    - ESLint's brace-style will check all tokens.
  * eqeqeq:
    - Option "smart" allows for comparing two literal values, evaluating the value of typeof and null comparisons.
  * no-console:
    - Custom console methods, if they exist, will no longer be allowed.
  * no-underscore-dangle:
    - Leading and trailing underscores (_) on identifiers will now be ignored.
  * react/jsx-no-bind:
    - ESLint rule 'jsx-no-bind' also checks for arrow functions

3 rules are not known by tslint-to-eslint-config to have ESLint equivalents:
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "jsx-no-string-ref".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "jsx-self-close".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "typedef".

